class MedianFinder {
public:

    priority_queue<int, vector<int>, greater<int> > minHeap;
	priority_queue<int> maxHeap;
    MedianFinder() {
        
    }
    
    void addNum(int num) {
        maxHeap.push(num);
        int ele=maxHeap.top();
        minHeap.push(ele);
        maxHeap.pop();

        if(maxHeap.size()<minHeap.size()){
            maxHeap.push(minHeap.top());
            minHeap.pop();
        }
    }
    
    double findMedian() {

        double median;

        if(maxHeap.size()!=minHeap.size()){
            median=maxHeap.top();
        }
        else{
            median=(double)(maxHeap.top() + minHeap.top())/2;

        }

        return median;
        
    }
};
